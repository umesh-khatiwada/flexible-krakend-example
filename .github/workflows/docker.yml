name: Krakend Check & Deploy

on:
  push:
    branches: [main]
  pull_request:

jobs:
  krakend_check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create output directory
        run: mkdir -p tmp

      - name: Run Krakend check
        run: |
          docker run --rm \
            -v "$PWD:/etc/krakend" \
            -w /etc/krakend \
            -e FC_ENABLE=1 \
            -e FC_SETTINGS=config/settings/prod \
            -e FC_PARTIALS=config/partials \
            -e FC_TEMPLATES=config/templates \
            -e FC_OUT=/etc/krakend/tmp/out.json \
            -e SERVICE_NAME="KrakenD API Gateway" \
            krakend check -tdc "krakend.tmpl"

      - name: Upload output file
        uses: actions/upload-artifact@v4
        with:
          name: krakend-out
          path: tmp/out.json

  update_configmap:
    needs: krakend_check
    runs-on: ubuntu-latest

    steps:
      - name: Download Krakend output
        uses: actions/download-artifact@v4
        with:
          name: krakend-out
          path: tmp

      - name: Decode kubeconfig from secret
        run: echo "${{ secrets.KUBECONFIG_BASE64 }}" | base64 -d > kubeconfig.yaml

      - name: Create or update krakend-configmap
        run: |
          set -e
          if kubectl --kubeconfig=kubeconfig.yaml -n krakend get configmap krakend-configmap > /dev/null 2>&1; then
            echo "ConfigMap exists. Updating..."
            kubectl --kubeconfig=kubeconfig.yaml -n krakend create configmap krakend-configmap \
              --from-file=krakend.json=tmp/out.json \
              -o yaml --dry-run=client \
              | kubectl --kubeconfig=kubeconfig.yaml apply --validate=false -f -
          else
            echo "ConfigMap does not exist. Creating..."
            kubectl --kubeconfig=kubeconfig.yaml -n krakend create configmap krakend-configmap \
              --from-file=krakend.json=tmp/out.json
          fi

      - name: Restart krakend deployment
        run: |
          kubectl --kubeconfig=kubeconfig.yaml -n krakend rollout restart deployment/krakend
